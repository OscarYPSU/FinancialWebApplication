- Description of the project

- Optimizing SQL database using indexing and closed sql pool leaks, also using stored procedures

- Configured HTTP and outing and created a fully scalable application using MVC system using appropriate POST GET standard HTTPs

- Implemented authentication and authorization process using cookie cache based security

- Learned about foreign keys, usually one to many meaning foreign key should be created inside the table that will have multiple entries of the primary key in another table

- Implemented Log out and appropaite permission

- Created a separate layout for when user is logged in

-Created a simple crud application for transaction that also affected accountdetails DB

- Dynamically updates the user view for their budget when they add transaction using tempdata so data survives a redirection url

- implemented monthly reset for budget that checks current date month with user's last updated month that is stored in the accountdetail DB to check if monthly budget needs to be reset. 

- Added a table view in the home page that displays all the transaction that occurred within this month

- Only saved userAccountKey to cache when logged in

- Changed tempdata to receive the data from the database directly

- Added delete transaction button that dynamically removes the transaction and updates the accountbudget stimutaensouly






- Deploy the website to public domains using AWS cloud so talk about cloud familiarities and suage